C <- mlogit.data(choicePrice, shape = "wide", varying = 3:12, choice = "choice", sep = "-", alt.levels = 1:10)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
# check with mlogit
C <- choicePrice
C <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", alt.levels = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"))
C <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"))
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
View(C)
C <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
View(C)
colnames(C)
mlogit(choice ~ p | Income + Fs3_4 + Fs5. + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
# mlogit(choice ~ p | Income + Fs3_4 + Fs5. + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
mlogit(choice ~ p, data = C, method = "nr")
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
View(choicePrice)
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("p1","p2","p3","p4","p5","p6","p7","p8","p9","p10"))
# check with mlogit
C <- choicePrice
View(C)
C <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ p | Income + Fs3_4 + Fs5. + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
mlogit(choice ~ p | Income, data = C, method = "nr")
# mlogit(choice ~ p | Income + Fs3_4 + Fs5. + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ p | Income, data = C, method = "nr"))
View(C)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = C, method = "nr"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
# Manually
theta <- c(rep(1,19))
tapply(C$U,list(chid)
)
tapply(C$U,list(C$chid))
tapply(C$U,list(C$chid),)
str(C$chid)
str(C)
summary(C)
# check with mlogit
C <- choicePrice
setnames(C, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
C <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = C, method = "nr"))
str(C$chid)
C$hhid[C$chid == 1]
class(C$choice)
LL.p <- function(theta){
C$constant <- 0
for (i in 2:10) C$constant[C$alt = i] = theta[i]
LL.p <- function(theta){
C$constant <- 0
for (i in 2:10) C$constant[C$alt == i] = theta[i]
C$U <- theta[19]*C$Price + C$constant
P <- NULL
for (i in 1:nrow(choicePrice)){
P[i] <- exp(C$U[C$choice == TRUE & C$chid == i])/sum(exp(C$U[C$chid == i]))
}
return(-sum(log(P)))
}
result.2 <- optim(par = theta, LL.p)
# install.packages("bayesm")
# install.packages("data.table")
installed.packages(â€œdplyr")
# install.packages("bayesm")
# install.packages("data.table")
installed.packages("dplyr")
library("dplyr")
# install.packages("bayesm")
# install.packages("data.table")
installed.packages("dplyr")
# install.packages("bayesm")
# install.packages("data.table")
installed.packages("dplyr")
aggregate (C,list(chid),function(x)exp(x$U[x$choice == TRUE)/sum(exp(x$U))
aggregate (C,list(chid),function(x)exp(x$U[x$choice == TRUE]/sum(exp(x$U))
)
)
aggregate (C,list(C$chid),function(x)exp(x$U[x$choice == TRUE]/sum(exp(x$U))))
LL.p <- function(theta){
C$constant <- 0
for (i in 2:10) C$constant[C$alt == i] = theta[i]
C$U <- theta[19]*C$Price + C$constant
# P <- NULL
# for (i in 1:nrow(choicePrice)){
P <- aggregate (C[c("choice","U")],C["chid"],function(choice,U) exp(U[choice == TRUE]/sum(exp(U))))
return(-sum(log(P)))
}
result.2 <- optim(par = theta, LL.p)
C$constant <- 0
for (i in 2:10) C$constant[C$alt == i] = theta[i-1]
C$U <- theta[10]*C$Price + C$constant
aggregate (C[c("choice","U")],C["chid"],function(choice,U) exp(U[choice == TRUE]/sum(exp(U))))
C[c("choice","U")]
C["chid"]
# check with mlogit
Ch <- choicePrice
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
View(Ch)
View(choicePrice)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
# install.packages("data.table")
installed.packages("dplyr")
library("dplyr")
# check with mlogit
Ch <- data.frame(choicePrice)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
# install.packages("data.table")
installed.packages("dplyr")
library("dplyr")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
# install.packages("data.table")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(C, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = C, method = "nr"))
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = Ch, method = "nr"))
# Manually
theta <- c(rep(1,10))
C$constant <- 0
Ch$constant <- 0
for (i in 2:10) C$constant[Ch$alt == i] = theta[i-1]
Ch$constant <- 0
for (i in 2:10) Ch$constant[Ch$alt == i] = theta[i-1]
Ch$U <- theta[10]*Ch$Price + Ch$constant
Ch[c("choice","U")]
Ch["chid"]
View(demos)
demos["hhid"]
choicePrice["hhid"]
class(Ch)
class(choicePrice)
# choice.p<-function(sample){
#   x = filter(sample,choice=="TRUE") #filter the choice
#   prob = exp(x$U)/sum(exp(sample$U)) #caculate probability
#   return(prob)
# }
Ch <- data.frame(Ch)
class(Ch)
Ch$constant <- 0
for (i in 2:10) Ch$constant[Ch$alt == i] = theta[i-1]
Ch$U <- theta[10]*Ch$Price + Ch$constant
Ch[c("choice","U")]
head(Ch["chid"])
# P <- NULL
# for (i in 1:nrow(choicePrice)){
P <- aggregate (Ch[c("choice","U")],Ch["chid"],function(choice,U) exp(U[choice == TRUE]/sum(exp(U))))
# P <- NULL
# for (i in 1:nrow(choicePrice)){
P <- aggregate (Ch[c("choice","U")], Ch["chid"], mean)
View(P)
# P <- NULL
# for (i in 1:nrow(choicePrice)){
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(choice,U) choice+U)
# P <- NULL
# for (i in 1:nrow(choicePrice)){
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(choice,U) {exp(U[choice == TRUE]/sum(exp(U)))})
# choice.p<-function(sample){
#   x = filter(sample,choice=="TRUE") #filter the choice
#   prob = exp(x$U)/sum(exp(sample$U)) #caculate probability
#   return(prob)
# }
choice.p<- function(choice,U) {
exp(U[choice == TRUE]/sum(exp(U)))
}
P <- aggregate (Ch[c("choice","U")], Ch["chid"], choice.p )
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(choice,U=U) exp(U[choice == TRUE]/sum(exp(U))))
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(choice,U) exp(U[choice == TRUE]/sum(exp(U))))
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(x) x)
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(x) x[2])
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(x) x[6])
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(x) x[,1])
P <- aggregate (Ch[c("choice","U")], Ch["chid"], function(x) dim(x))
P <- aggregate (Ch[c("choice","U")], Ch["chid"], dim)
Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
table(Ch$choice)
table(choicePrice$choice)
D <- aggregate (Ch[c("U")], Ch["chid","choice"], exp)
N <- aggregate (Ch[c("U")], Ch["chid"], function(x) sum(exp(x)))
View(N)
D <- aggregate (Ch[c("U")], list(Ch["chid","choice"]), exp)
D <- aggregate (Ch[c("U")], list(Ch["chid","choice"]), sum)
D <- aggregate (Ch[c("U")], list(Ch["chid","choice"]), sum)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], sum)
View(D)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], sum)[,3][D$choice == True]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], sum)[D$choice == T]
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))
D <- aggregate (Ch["U"], Ch[c("chid","choice")], sum)[D$choice == T]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
D <- D[D$choice == T]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)[D$choice == TRUE]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)[D$choice == "TRUE"]
D <- D[D$choice == "TRUE"]
class(D$choice)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))
View(N)
View(P)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)["choice"!= FALSE]
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)["choice"!= FALSE]
P <- N/D
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)["choice"!= FALSE][3]
P <- N/D
View(D)
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
View(N)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)["choice"!= FALSE]
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
View(D)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
# install.packages("data.table")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = Ch, method = "nr"))
# Manually
b <- c(rep(1,10))
# choice.p<-function(sample){
#   x = filter(sample,choice=="TRUE") #filter the choice
#   prob = exp(x$U)/sum(exp(sample$U)) #caculate probability
#   return(prob)
# }
choice.p<- function(choice,U) {
exp(U[choice == TRUE]/sum(exp(U)))
}
Ch <- data.frame(Ch)
Ch$constant <- 0
for (i in 2:10) Ch$constant[Ch$alt == i] = theta[i-1]
Ch$U <- theta[10]*Ch$Price + Ch$constant
for (i in 2:10) Ch$constant[Ch$alt == i] = beta[i-1]
Ch$U <- beta[10]*Ch$Price + Ch$constant
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = Ch, method = "nr"))
# Manually
b <- c(rep(1,10))
Ch <- data.frame(Ch)
View(Ch)
Ch$constant <- 0
for (i in 2:10) Ch$constant[Ch$alt == i] <- beta[i-1]
i = 2
Ch$constant[Ch$alt == i] <- beta[i-1]
for (i in 2:10) Ch$constant[Ch$alt == i] <- beta[i-1]
for (i in 2:10) Ch$constant[Ch$alt == i] <- b[i-1]
Ch$U <- b[10]*Ch$Price + Ch$constant
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
View(N)
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
# install.packages("bayesm")
# install.packages("data.table")
library("bayesm")
library("data.table")
data("margarine")
choicePrice <- margarine$choicePrice
demos       <- margarine$demos
# Extract price data by Char
Stk <- as.matrix(choicePrice[,grepl("Stk",colnames(choicePrice))])
Tub <- as.matrix(choicePrice[,grepl("Tub",colnames(choicePrice))])
# Calculate the Avg and Sd
byChar           <- data.frame(average = c(mean(Stk),mean(Tub)), sd = c(sd(Stk),sd(Tub)))
rownames(byChar) <- c("Stk","Tub")
byChar
# Mark the chosen one
choicePrice$chosen      <- colnames(choicePrice[,-(1:2)])[choicePrice$choice]
choicePrice$chosenChar  <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 2)
choicePrice$chosenBrand <- sapply(strsplit(choicePrice$chosen, "_"), "[[", 1)
# Market Share by Brand
table(choicePrice$chosenBrand)/nrow(choicePrice)
# Market Share by Char
table(choicePrice$chosenChar)/nrow(choicePrice)
choicePrice <- merge(choicePrice, demos, by = "hhid", all.x = TRUE)
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosen))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenBrand))
lapply(choicePrice[,c("Income", "Fs3_4","Fs5.","Fam_Size", "college", "whtcollar", "retired")],
function(x) xtabs(~x + choicePrice$chosenChar))
# check with mlogit
Ch <- data.frame(choicePrice)
setnames(Ch, old = c("PPk_Stk", "PBB_Stk", "PFl_Stk", "PHse_Stk", "PGen_Stk", "PImp_Stk", "PSS_Tub", "PPk_Tub", "PFl_Tub", "PHse_Tub"), new = c("Price1","Price2","Price3","Price4","Price5","Price6","Price7","Price8","Price9","Price10"))
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# install.packages("bayesm")
# install.packages("data.table")
libaray("mlogit")
# install.packages("bayesm")
# install.packages("data.table")
install.packages("mlogit")
libaray("mlogit")
library("mlogit")
Ch <- mlogit.data(Ch, shape = "wide", varying = 3:12, choice = "choice", sep = "", alt.levels = 1:10)
# mlogit(choice ~ 0 | Income + Fam_Size + college + whtcollar + retired, data = C, method = "nr")
summary(mlogit(choice ~ Price, data = Ch, method = "nr"))
# Manually
b <- c(rep(1,10))
Ch <- data.frame(Ch)
Ch$constant <- 0
for (i in 2:10) Ch$constant[Ch$alt == i] <- b[i-1]
Ch$U <- b[10]*Ch$Price + Ch$constant
# Ch$choice.b <- ifelse(Ch$choice == T, 1, 0)
N <- aggregate (Ch["U"], Ch["chid"], function(x) sum(exp(x)))[2]
D <- aggregate (Ch["U"], Ch[c("chid","choice")], exp)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], function(X)exp)
View(D)
D <- aggregate (Ch["U"], Ch[c("chid","choice")], function(X)exp(x))
D <- aggregate (Ch["U"], Ch[c("chid","choice")], function(x)exp(x))
View(D)
aggregate (Ch["U"], Ch[c(choice")], function(x)exp(x))
)
)
)
q
ccccc
wefwefa)
